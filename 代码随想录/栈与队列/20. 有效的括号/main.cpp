#include <bits/stdc++.h>
using namespace std;

class Solution {
	public:
		bool isValid(string s) {
			if (s.size() % 2)
				return false;
			stack<char> st;
			for (int i = 0; i < s.size(); i++) {
				if (s[i] == '(')
					st.push(')');
				else if (s[i] == '{')
					st.push('}');
				else if (s[i] == '[')
					st.push(']');
				// 第三种情况：遍历字符串匹配的过程中，栈已经为空了，没有匹配的字符了，说明右括号没有找到对应的左括号 return false
				// 第二种情况：遍历字符串匹配的过程中，发现栈里没有我们要匹配的字符。所以return false
				else if (st.empty() || st.top() != s[i])
					return false;
				else
					st.pop();// st.top() 与 s[i]相等，栈弹出元素
			}
			// 第一种情况：此时我们已经遍历完了字符串，但是栈不为空，说明有相应的左括号没有右括号来匹配，所以return false，否则就return true
			return st.empty();
		}
};

int main(int argc, char **argv) {
	Solution solution;
	string s = "()[]{}";
	cout << solution.isValid(s);
	return 0;
}